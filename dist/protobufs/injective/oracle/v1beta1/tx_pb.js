// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file injective/oracle/v1beta1/tx.proto (package injective.oracle.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Params, PriceAttestation } from "./oracle_pb.js";
/**
 * MsgRelayProviderPrice defines a SDK message for setting a price through the
 * provider oracle.
 *
 * @generated from message injective.oracle.v1beta1.MsgRelayProviderPrices
 */
class MsgRelayProviderPrices extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        /**
         * @generated from field: string provider = 2;
         */
        this.provider = "";
        /**
         * @generated from field: repeated string symbols = 3;
         */
        this.symbols = [];
        /**
         * @generated from field: repeated string prices = 4;
         */
        this.prices = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRelayProviderPrices().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRelayProviderPrices().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRelayProviderPrices().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRelayProviderPrices, a, b);
    }
}
MsgRelayProviderPrices.runtime = proto3;
MsgRelayProviderPrices.typeName = "injective.oracle.v1beta1.MsgRelayProviderPrices";
MsgRelayProviderPrices.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "provider", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "symbols", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "prices", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
]);
export { MsgRelayProviderPrices };
/**
 * @generated from message injective.oracle.v1beta1.MsgRelayProviderPricesResponse
 */
class MsgRelayProviderPricesResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRelayProviderPricesResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRelayProviderPricesResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRelayProviderPricesResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRelayProviderPricesResponse, a, b);
    }
}
MsgRelayProviderPricesResponse.runtime = proto3;
MsgRelayProviderPricesResponse.typeName = "injective.oracle.v1beta1.MsgRelayProviderPricesResponse";
MsgRelayProviderPricesResponse.fields = proto3.util.newFieldList(() => []);
export { MsgRelayProviderPricesResponse };
/**
 * MsgRelayPriceFeedPrice defines a SDK message for setting a price through the
 * pricefeed oracle.
 *
 * @generated from message injective.oracle.v1beta1.MsgRelayPriceFeedPrice
 */
class MsgRelayPriceFeedPrice extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        /**
         * @generated from field: repeated string base = 2;
         */
        this.base = [];
        /**
         * @generated from field: repeated string quote = 3;
         */
        this.quote = [];
        /**
         * price defines the price of the oracle base and quote
         *
         * @generated from field: repeated string price = 4;
         */
        this.price = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRelayPriceFeedPrice().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRelayPriceFeedPrice().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRelayPriceFeedPrice().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRelayPriceFeedPrice, a, b);
    }
}
MsgRelayPriceFeedPrice.runtime = proto3;
MsgRelayPriceFeedPrice.typeName = "injective.oracle.v1beta1.MsgRelayPriceFeedPrice";
MsgRelayPriceFeedPrice.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "base", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "quote", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "price", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
]);
export { MsgRelayPriceFeedPrice };
/**
 * @generated from message injective.oracle.v1beta1.MsgRelayPriceFeedPriceResponse
 */
class MsgRelayPriceFeedPriceResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRelayPriceFeedPriceResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRelayPriceFeedPriceResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRelayPriceFeedPriceResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRelayPriceFeedPriceResponse, a, b);
    }
}
MsgRelayPriceFeedPriceResponse.runtime = proto3;
MsgRelayPriceFeedPriceResponse.typeName = "injective.oracle.v1beta1.MsgRelayPriceFeedPriceResponse";
MsgRelayPriceFeedPriceResponse.fields = proto3.util.newFieldList(() => []);
export { MsgRelayPriceFeedPriceResponse };
/**
 * @generated from message injective.oracle.v1beta1.MsgRelayBandRates
 */
class MsgRelayBandRates extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string relayer = 1;
         */
        this.relayer = "";
        /**
         * @generated from field: repeated string symbols = 2;
         */
        this.symbols = [];
        /**
         * @generated from field: repeated uint64 rates = 3;
         */
        this.rates = [];
        /**
         * @generated from field: repeated uint64 resolve_times = 4;
         */
        this.resolveTimes = [];
        /**
         * @generated from field: repeated uint64 requestIDs = 5;
         */
        this.requestIDs = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRelayBandRates().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRelayBandRates().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRelayBandRates().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRelayBandRates, a, b);
    }
}
MsgRelayBandRates.runtime = proto3;
MsgRelayBandRates.typeName = "injective.oracle.v1beta1.MsgRelayBandRates";
MsgRelayBandRates.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "relayer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "symbols", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "rates", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
    { no: 4, name: "resolve_times", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
    { no: 5, name: "requestIDs", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
]);
export { MsgRelayBandRates };
/**
 * @generated from message injective.oracle.v1beta1.MsgRelayBandRatesResponse
 */
class MsgRelayBandRatesResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRelayBandRatesResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRelayBandRatesResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRelayBandRatesResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRelayBandRatesResponse, a, b);
    }
}
MsgRelayBandRatesResponse.runtime = proto3;
MsgRelayBandRatesResponse.typeName = "injective.oracle.v1beta1.MsgRelayBandRatesResponse";
MsgRelayBandRatesResponse.fields = proto3.util.newFieldList(() => []);
export { MsgRelayBandRatesResponse };
/**
 * MsgRelayCoinbaseMessages defines a SDK message for relaying price messages
 * from Coinbase API.
 *
 * @generated from message injective.oracle.v1beta1.MsgRelayCoinbaseMessages
 */
class MsgRelayCoinbaseMessages extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        /**
         * @generated from field: repeated bytes messages = 2;
         */
        this.messages = [];
        /**
         * @generated from field: repeated bytes signatures = 3;
         */
        this.signatures = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRelayCoinbaseMessages().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRelayCoinbaseMessages().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRelayCoinbaseMessages().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRelayCoinbaseMessages, a, b);
    }
}
MsgRelayCoinbaseMessages.runtime = proto3;
MsgRelayCoinbaseMessages.typeName = "injective.oracle.v1beta1.MsgRelayCoinbaseMessages";
MsgRelayCoinbaseMessages.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "messages", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
    { no: 3, name: "signatures", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
]);
export { MsgRelayCoinbaseMessages };
/**
 * @generated from message injective.oracle.v1beta1.MsgRelayCoinbaseMessagesResponse
 */
class MsgRelayCoinbaseMessagesResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRelayCoinbaseMessagesResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRelayCoinbaseMessagesResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRelayCoinbaseMessagesResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRelayCoinbaseMessagesResponse, a, b);
    }
}
MsgRelayCoinbaseMessagesResponse.runtime = proto3;
MsgRelayCoinbaseMessagesResponse.typeName = "injective.oracle.v1beta1.MsgRelayCoinbaseMessagesResponse";
MsgRelayCoinbaseMessagesResponse.fields = proto3.util.newFieldList(() => []);
export { MsgRelayCoinbaseMessagesResponse };
/**
 * MsgRequestBandIBCRates defines a SDK message for requesting data from
 * BandChain using IBC.
 *
 * @generated from message injective.oracle.v1beta1.MsgRequestBandIBCRates
 */
class MsgRequestBandIBCRates extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        /**
         * @generated from field: uint64 request_id = 2;
         */
        this.requestId = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRequestBandIBCRates().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRequestBandIBCRates().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRequestBandIBCRates().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRequestBandIBCRates, a, b);
    }
}
MsgRequestBandIBCRates.runtime = proto3;
MsgRequestBandIBCRates.typeName = "injective.oracle.v1beta1.MsgRequestBandIBCRates";
MsgRequestBandIBCRates.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "request_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
export { MsgRequestBandIBCRates };
/**
 * MsgRequestDataResponse defines the Msg/RequestBandIBCRates response type.
 *
 * @generated from message injective.oracle.v1beta1.MsgRequestBandIBCRatesResponse
 */
class MsgRequestBandIBCRatesResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRequestBandIBCRatesResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRequestBandIBCRatesResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRequestBandIBCRatesResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRequestBandIBCRatesResponse, a, b);
    }
}
MsgRequestBandIBCRatesResponse.runtime = proto3;
MsgRequestBandIBCRatesResponse.typeName = "injective.oracle.v1beta1.MsgRequestBandIBCRatesResponse";
MsgRequestBandIBCRatesResponse.fields = proto3.util.newFieldList(() => []);
export { MsgRequestBandIBCRatesResponse };
/**
 * MsgRelayPythPrices defines a SDK message for updating Pyth prices
 *
 * @generated from message injective.oracle.v1beta1.MsgRelayPythPrices
 */
class MsgRelayPythPrices extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        /**
         * @generated from field: repeated injective.oracle.v1beta1.PriceAttestation price_attestations = 2;
         */
        this.priceAttestations = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRelayPythPrices().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRelayPythPrices().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRelayPythPrices().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRelayPythPrices, a, b);
    }
}
MsgRelayPythPrices.runtime = proto3;
MsgRelayPythPrices.typeName = "injective.oracle.v1beta1.MsgRelayPythPrices";
MsgRelayPythPrices.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "price_attestations", kind: "message", T: PriceAttestation, repeated: true },
]);
export { MsgRelayPythPrices };
/**
 * MsgRelayPythPricesResponse defines the Msg/RelayPythPrices response type.
 *
 * @generated from message injective.oracle.v1beta1.MsgRelayPythPricesResponse
 */
class MsgRelayPythPricesResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRelayPythPricesResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRelayPythPricesResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRelayPythPricesResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRelayPythPricesResponse, a, b);
    }
}
MsgRelayPythPricesResponse.runtime = proto3;
MsgRelayPythPricesResponse.typeName = "injective.oracle.v1beta1.MsgRelayPythPricesResponse";
MsgRelayPythPricesResponse.fields = proto3.util.newFieldList(() => []);
export { MsgRelayPythPricesResponse };
/**
 * @generated from message injective.oracle.v1beta1.MsgUpdateParams
 */
class MsgUpdateParams extends Message {
    constructor(data) {
        super();
        /**
         * authority is the address of the governance account.
         *
         * @generated from field: string authority = 1;
         */
        this.authority = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateParams().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateParams().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateParams().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateParams, a, b);
    }
}
MsgUpdateParams.runtime = proto3;
MsgUpdateParams.typeName = "injective.oracle.v1beta1.MsgUpdateParams";
MsgUpdateParams.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
]);
export { MsgUpdateParams };
/**
 * @generated from message injective.oracle.v1beta1.MsgUpdateParamsResponse
 */
class MsgUpdateParamsResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateParamsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateParamsResponse, a, b);
    }
}
MsgUpdateParamsResponse.runtime = proto3;
MsgUpdateParamsResponse.typeName = "injective.oracle.v1beta1.MsgUpdateParamsResponse";
MsgUpdateParamsResponse.fields = proto3.util.newFieldList(() => []);
export { MsgUpdateParamsResponse };
//# sourceMappingURL=tx_pb.js.map